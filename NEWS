Main changes between cado-nfs-2.0 and cado-nfs-2.0.1:

* Accept all Python versions >= 3.2
* Fix compilation with gcc 4.9

Main changes between cado-nfs-1.1 and cado-nfs-2.0:

* the default parameters in the params subdirectory have been improved
* major speedups in the polynomial selection, sieving and filtering steps
* the filtering step produces a smaller matrix (about 5% less rows),
  see http://hal.inria.fr/hal-00734654 for more details.
* the replay step is faster and uses less memory
* fixed bug in the lattice siever (las) on 32-bit computers
* allow compilation on MinGW32. Performance is poor, however. MinGW64 is
  currently not supported
* new cadofactor.py script written in Python, allows larger-scale distribution
  with client/server model
* files used/generated by cado-nfs-1.1 are not entirely compatible with
  cado-nfs-2.0. Relations files are compatible, but for pretty much
  everything else, it is preferrable to start afresh. Likewise,
  command-line options of several binaries have changed.
* implementations of NFS-DL and NFS-FFS (experimental, requires some
  background knowledge to use)


Main changes between cado-nfs-1.0 and cado-nfs-1.1:

* the polynomial selection uses the new algorithm presented by Kleinjung at
  the 2008 CADO workshop (supports multithreading)
* the polynomial selection uses a faster root sieve (rootsieve5)
* the lattice siever (las) supports a larger sieving region (I=16). This is
  useful for integers greater than 200 digits
* minor bug fixes, small speedup in sieving (las) and filtering (purge)
* reorganization of the binaries in the linear algebra step and speedup
  when using many machines with MPI
* new experimental scripts to execute the sieve on a cluster.
  These scripts rely on the OAR job scheduler being used, and exploit its
  "besteffort" mode. Some even more experimental scripts for linear
  algebra are in the development version.
* addition of new parameter files and a few new parameters (cf params.c91)
* the linear algebra step now makes use of dynamically loaded shared
  libraries. This might result in configuration issues, which we hope the
  scripts get it right. See the README file.

